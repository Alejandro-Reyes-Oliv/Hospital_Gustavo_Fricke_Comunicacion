generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id            Int      @id @default(autoincrement())
  nombre        String
  especialidad  String?
  activo        Boolean  @default(true)
  creadoEn      DateTime @default(now())
  actualizadoEn DateTime @updatedAt

  citas Cita[] @relation("DoctorCitas")
  
}

model Cita {
  id                 Int       @id @default(autoincrement())
  doctorId           Int
  fecha_hora         DateTime  // timestamp local (sin zona)
  estado             String    @default("pendiente") // pendiente | confirmada | cancelada

  paciente_nombre    String
  paciente_rut       String?
  paciente_telefono  String

  // snapshots del doctor (texto “congelado” para el mensaje)
  doctor_nombre_snap String?
  especialidad_snap  String?

  doctor             Doctor    @relation("DoctorCitas", fields: [doctorId], references: [id], onDelete: Restrict)
  recordatorios      CitaRecordatorio[]

  creadoEn           DateTime  @default(now())
  actualizadoEn      DateTime  @updatedAt

  @@unique([doctorId, fecha_hora])   // evita doble-booking exacto
  @@index([fecha_hora])
}

model CitaRecordatorio {
  id              Int       @id @default(autoincrement())
  citaId          Int
  tipo            String    // 6m | 1m | 1w | 1d | manual
  programado_para DateTime  // timestamp local (sin zona)
  estado          String    @default("pendiente") // pendiente | enviado | error
  enviado_en      DateTime?
  canal           String?
  intentos        Int       @default(0)
  error_ultimo    String?

  cita            Cita      @relation(fields: [citaId], references: [id], onDelete: Cascade)

  creadoEn        DateTime  @default(now())
  actualizadoEn   DateTime  @updatedAt

  @@index([estado, programado_para])
  @@index([citaId])
}

